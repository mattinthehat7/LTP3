Defining The Form
    <form action="#" method="post"> //must have two attributes 1. ACTION - this is another url that processes the form (php or node.js or python).. may add to database, may create and send an email -- need a whole url that processes a form (formprocess.php) *# = we don't have an action
    
    2. METHOD = 1. POST 2. GET
        Post - sent in http headers to whatever is marked in the action; http headers are parts of a document that aren't seen, but that are processed by the browser
        
        Get - everything the user types becomes part of the url as a query strong - example - www.learntoprogram.tv/?first=Mark&last=Lassoff
        Post is most common
        
        Get is NOT SECURE
        
    </form>
    
    
Text Input
    <form action="#" method="post">
        <label for="first">First</label> //for links it to a specific form element
        <input type="text" id="first" name="first" />
        
        
        //id is the link to the label, the name is how whatever is typed is labeled when it is sent to the server based on whatever value we have as the action
        
        <br/>
        
        <label for="last">Last</label>
        <input type="text" id="last" name="last" />
        
        <br/>
        <label for="email">Email</label>
        <input type="email" id="email" name="last" />
        
        //email type gives special email keyboard on mobile
        
        <label for="phone">Phone</label>
        <input type="phone" id="phone" placeholder ="Phone Number" />
        
        //Placeholder puts some info in there already to know what you are supposed to type
        
        
        //For larger text
        
        <label for="bio">Biography</label>
        <textarea id="bio>This text is default text -- example, type your biography here</textarea>
    
    </form>
    
        //use css to style
        
        <style>
            #bio
                {
                    width: 300px;
                    height: 200px;
                }
        </style>
        
        
Limiting Text Input
    Prevent errors and security problems
    
    1. Make a field required so a user cant leave it blank
    
    <input type="text" id="first" name="first" required="required" />
    
    2. Maximum number of characters and autocomplete (if off it can help prevent user error)
    
    <input type="text" id="first" name="first" maxlength="25" autocomplete="off" />
    
    3. Less errors --> Give user suggestions as to what they can put in, create data list -- This will give you potential autocompletes, can prevent spelling errors, or show type of data you want here -- MUST ASSIGN LIST IN INPUT THEN USE THE ID IN DATA LIST
    
    <input type="text" input id="bands" placeholder="Band Name" list="myBands" />
        <datalist id="myBands">
            <option value="Journey" />
            <option value="REO Speedwagon />
            <option value="Styx" />
            <option value="Heart" />
            <option value="Rush" />
        </datalist>
        
Multiple Choice
    Three ways to do this
        1. Checkbox (one, some, or all options presented)
            a. EACH NAME MUST BE THE SAME EACH VALUE MUST BE DIFFERENT
            value is returned to the server if this particular option is selected so each value must be different and each name must be the same
        
    <label id="bands">Bands You Like</label><br/>
    <input type ="checkbox" name="bands" value="Journey" />Journey<br/>
    <input type ="checkbox" name="bands" value="REO" />REO Speedwagon<br/>
    <input type ="checkbox" name="bands" value="Foreigner" />Foreigner<br/>
    <input type ="checkbox" name="bands" value="Heart" /> Heart<br/>
    <input type ="checkbox" name="bands" value="Scandal" />Scandal<br/>
    
    2. Radio Button - Several options but only one is appropriate
        a. name is how they are grouped so must be the same - value is what is returned by the server and processed by the form action and method
        b. we can use checked attribute to assign a default
    
    <label id="gender">Gender</label>
    <input type="radio" name="gender" value="Male">Male<br/>
    <input type="radio" name="gender" value="off">Female<br/>
    <input type="radio" name="gender" value="other" checked="checked">Other<br/>
    
    3. Select box - size attribute = scrolling box; multiple attribute helps you can select with control button or shift button
    
    <select id="state" size="5" multiple="multiple">State</label>
        <option value="Alabama">Alabama</option>
        <option value="Alaska">Alaska</option>
        <option value="Connecticut">Connecticut</option>
        <option value="Florida">Florida</option>
        <option value="Illinois">Illinois</option>
    </select><br/>
        
Form Submission
    INSIDE FORM TAGS -- ADD SUBMIT BUTTON
        1. Older way - whatever we put in value will put writing in the button
            <input type="submit" value="Send Form" />
        2. Newer way - button tag
            <button type="submit">Send Form</button>
        3. Second type of button is the reset button = allows user to reset a form so there is nothing written in it
            <button type="reset">Reset</button>
            
            
Generic Buttons
    make buttons that do just about anything
    
    <head>
        <title>Generic Buttons</title>
       
       //javascript
        <script>
            window.onload=function()
            {
                document.getElementById('btnAlert').addEventListener('click'), alertMe, false);
            }
            
            function alertMe()
            {
                alert("Greetings!");
            }
    </head>
    
        //html for the button the id attribute hooks it up to javascript if you identify the id
    <body>
        <button id="btnAlert">Alert Me</button>
    </body>
    
    Old style in html button tag can add attribute onclick="alertMe()"
    
    
Date Inputs
    
        <form action="#" method="pst">
            <label for="dob">Date of Birth</label>
            <input type="date" id="dob" />
            
            * <input type="datetime-local" id="dob" />
            
            <label for="tob"Time of Birth</label>
            <input type="time" id="tob" />
            
Numerical Inputs
        
        <label for="quantity">Quantity of Apples</labels>
        <input type="number" id="quantity" min="0" max="10" /> 
        ^^ will display numerical keyboard on mobile
        
Organizing a Form with Fieldsets - open around 1 set of data you want separated it puts a box around those items

    *Can add legend using legend tag to put a legend on the set

<form action="#" method="post">
    <fieldset>
    <legend>Personal Data</legend>
    <label for="email">email</label>
    <input type= etc....
    </fieldset>
            

        
